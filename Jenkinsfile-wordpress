pipeline {
    agent {
        node {
            label "master"
        }
    }
    environment {
        WORKSPACE_PATH=pwd()
        VERSION="${env.BUILD_NUMBER}"
    }
    stages {
        stage("up infrastructure with wordpress") {
            steps {
                 catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                    ansiblePlaybook become: true,
                    credentialsId: '497f7d54-ceaa-47a2-bff5-b86309084120',
                    disableHostKeyChecking: true,
                    inventory: 'ansible/hosts',
                    playbook: 'ansible/wordpress.yml',
                    extras: '-e version=$VERSION -e date=$BUILD_TIMESTAMP'
                }
            }
        }
        stage("test running") {
            steps {
                script {
                    def remote = [name: 'test', host: '10.0.0.38', allowAnyHosts: true]
                    withCredentials([sshUserPrivateKey(credentialsId: '497f7d54-ceaa-47a2-bff5-b86309084120', keyFileVariable: 'identity', passphraseVariable: '', usernameVariable: 'jenkins')]){
                        remote.user = jenkins
                        remote.identityFile = identity
                        stage("test") {
                           sshCommand remote: remote, command: "echo 'testing.....'"
                           sshCommand remote: remote, command: "sh 'docker ps -a'"
                    }
                }
            }
        }
    }
    }
}
